/*hello I'm Alaa Felemban
  this code is my robot and the plan is to let the robot
  - blink
  -let him go forword
  - then measure Distance
  - if it's < 15 it will go back word
  - then cheak the light sensor
  - if (analogRead (leftLDR) > analogRead (rightLDR)
  - it will turn Left, and turn right if other
  - sweep and measure
  - fade
*/



#include <Servo.h>
// the ultrasonic distance measuring sensor sits on top of this servo

// Servo:use of the library disables analogWrite() (PWM) functionality on pins 9 and 10

Servo myServo;

// Global array of measurements

long measurements[180];

long averages[18];

// Control pins for the right half of the H-bridge
const int enable2 = 3; // PWM pin for speed control
const int in3 = 8;
const int in4 = 7;

//other half
const int enable1 = 6; // PWM pin for speed control
const int in1 = 4;
const int in2 = 2;

// ultrasonic distance measuring sensor
const int trigPin = 12;
const int echoPin = 11;

// light sensor
const int leftLDR = A0;
const int rightLDR = A2;

int led = 13;           // the PWM pin the LED is attached to
int brightness = 0;    // how bright the LED is
int fadeAmount = 5;    // how many points to fade the LED by

void setup() {
  // my setup code here, to run once:

  Serial.begin (9600);

  myServo.attach(9);
  // pins for the ultrasonic distance measuring sensor
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  // motors
  pinMode( enable1, OUTPUT);
  pinMode( in1, OUTPUT);
  pinMode( in2, OUTPUT);

  pinMode( enable2, OUTPUT);
  pinMode( in3, OUTPUT);
  pinMode( in4, OUTPUT);

  // Set the speed to 100, which is pretty slow
  analogWrite (enable1, 150 );
  analogWrite (enable2, 150);

  //ledlight
  pinMode(led, OUTPUT);

}

void loop() {
  //Alaas main code here, to run repeatedly:

  Serial.println("Hello from blinkled()");
  blinkled();

  Serial.println("Hello from goForward()");
  goForward(5000);


  long distance;
  Serial.println("Hello from distance()");

  distance = measureDistance();

  if (distance < 15 ) {
    Serial.println("Hello from gobackword()");
    gobackword(1000);
  } else {
    goForward(1000);
  }
  
  Serial.println("Hello from analogread()");
 
  if (analogRead (leftLDR) > analogRead (rightLDR) ) {
    Serial.println("Hello from turnleft()");
    turnLeft(50);
 } else {
    Serial.println("Hello from turnright()");
    turnRight(50);

  }


  // look around and see what's nearby

  sweepAndMeasure();

  if (distance < 15 ) {
    Serial.println("Hello from gobackword()");

    gobackword(3000);
  } else {

    goForward(1000);
  }

  Serial.println("Hello from fade()");
  fade();



} //end of loop

//functions

void blinkled() {
  digitalWrite(13, HIGH);   // turn the LED on (HIGH is the voltage level)
  delay(1000);              // wait for a second
  digitalWrite(13, LOW);    // turn the LED off by making the voltage LOW
  delay(1000);              // wait for a second
         
}

// go backward for a certain amount of time
void gobackword(int timeToMove) {

  // left motor
  digitalWrite (in1, HIGH);
  digitalWrite (in2, LOW);
  // Right motor
  digitalWrite (in3, LOW);
  digitalWrite (in4, HIGH);


  delay (timeToMove);


}



// go forward for a certain amount of time
void goForward(int timeToMove) {


  // left motor
  digitalWrite (in1, LOW);
  digitalWrite (in2, HIGH);
  // Right motor
  digitalWrite (in3, HIGH);
  digitalWrite (in4, LOW);


  delay (timeToMove);

}
// turn left for a certain amount of time
void turnLeft(int timeToMove) {

  // left motor
  digitalWrite (in1, LOW);
  digitalWrite (in2, LOW);
   
  // Right motor
  digitalWrite (in3, LOW);
  digitalWrite (in4, HIGH);

  delay (50);
 
}

// turn right for a certain amount of time
void turnRight(int timeToMove) {


  // left motor
  digitalWrite (in1, HIGH);
  digitalWrite (in2, LOW);
  
  //Right motor
  digitalWrite (in3, LOW);
  digitalWrite (in4, LOW);
  delay (50);


}

void stopp () {
  analogWrite (enable1, LOW);
  analogWrite (enable2, LOW);

}

void start () {
  analogWrite (enable1, HIGH);
  analogWrite (enable2, HIGH);
}




// sweep 180 degrees and populate the measurements array

void sweepAndMeasure() {

  //Serial.println("Hello from sweepAndMeasure");

  for (int degree = 0; degree < 180; degree++) {


    myServo.write(degree);

    delay(15);

    measurements[degree] = measureDistance();

  }

}


// Take a measurement using the ultrasonic discance

// measuring sensor and return the distance in cm

// returns -1 if an error occurrs

long measureDistance() {

  //Serial.println("Hello from measureDistance");

  long myDuration, distance;


  // measure how far anything is from us

  // send the pulse

  digitalWrite(trigPin, LOW);

  delayMicroseconds(2); // low for 2 microseconds

  digitalWrite(trigPin, HIGH);

  delayMicroseconds(10); // high for 10 microseconds

  digitalWrite(trigPin, LOW);

  myDuration = pulseIn(echoPin, HIGH); // measure the time to the echo

  distance = (myDuration / 2) / 29.1; // calculate the distance in cm


  // if reading is out of range, make it -1


  if (distance <= 0 || distance >= 200) {

    distance = -1;

  }

  return distance;

}



void fade() {
  // set the brightness of pin 9:
  analogWrite(led, brightness);

  // change the brightness for next time through the loop:
  brightness = brightness + fadeAmount;

  // reverse the direction of the fading at the ends of the fade:
  if (brightness == 0 || brightness == 255) {
    fadeAmount = -fadeAmount ;
  }
  // wait for 30 milliseconds to see the dimming effect
  delay(30);
}

